
// 引入mockjs
import Mock from "mockjs";
import newsOne from '@/static/images/news/news060301.jpg'
// 获取 mock.Random 对象
const Random = Mock.Random;

// 使用mockjs模拟数据
let tableList = [
  {
    id: "1",
    content: [
      { name: '' }
    ],
    imgList: [{ img: newsOne }],
  },
  {
    id: "2",
    content: [
      { name: ' 医生集团、多点执业的概念不在多点，而是在价值的回归和体现。价值回归表现：病人找到合适的医生，避免盲目看病的损失；医生找到合适的病人，获得应有的报酬；医保资金得到合理使用，而不至于鼓励过度医疗……-中国输液安全与防范专家共识》（以下简称《专家共识》）在北京定稿。据悉，该共识将于5月份发布。' },
      { name: ' 医生多点执业提出已久，但一直没有突破。“医生工作室”是在没有任何法律约束状态下的一种工作形式，目前的关键是有没有落脚点。很多政策都在鼓励医生到基层，“鼓励”两个字是很难实现的，为什么我们不用“吸引”两个字，使医疗资源的供给有序的分布呢？ “防癌基因检测领军专家”为定位，不断开发和优化癌症基因检测技术，帮助每个人赢得癌症防御战。' },
      { name: ' 流动就是世界进步的动力，如果没有流动，就是死水一潭，也是医改，尤其是分级诊疗为什么一直没有取得很明显效果的原因。李斌主任所讲的“互联网+”提升医疗水平，是谁提升医疗水平、服务能力呢？是医生，也就是“互联网+医生团队”。李斌提出了医生团队，就是一种潮流。' },
      { name: ' 将来，医生团队不仅仅是为有钱人服务的，应该是为有需要的人服务。所以说医生集团、名医中心，就是打造一个品牌。什么叫品牌呢？就是品质、品格、品位+招牌。' },
      { name: ' 品质，是我们的技术、力量、核心竞争力；品德，是我们经常讲的“仁心”，我们的爱心；品位，是有一定的地位、价值观，医生本来就是一个很有品位的职业。为何现在却要用薄利多销、大小通吃，甚至用过度医疗来提高收入呢？为什么不能用自己的能力去提升自己价值呢？' },
      { name: ' 医生有品无牌，是一个珍品；医生有质无牌，是一个藏品，是古董，因为只有少部分人知道，为少部分人服务。如果医生有牌无质，那么就是一个赝品，欺骗百姓，靠虚假广告。有质有牌就是一个真品。只要不是政府背景的名医中心，它一定是按照市场规律去做，投资集团有没有能力赢得医生就是关键。现在医生自己来组织成立的医生集团，是大家认可的一个团队，一个group，必定会产生核裂变般的发展。+招牌。' },
      { name: ' 如果以医生集团的形式去“出售”服务，就不需医生去建诊所，建医院，只要利用医生集团、名医中心这样的平台，和医院建立PHP的关系，就能得到快速的发展。' },
      { name: ' 在这种医生流动的潮流下，目前的支付制度对医生的流动是有所阻碍的。解开医生单位人的枷锁，有两把钥匙，一个是人事制度改革，使医生脱离人事关系，现在国家已经在做。医生再眷恋于大型医院，通过现在的一种分配制度，可能会过时了。+招牌。' },
      { name: ' 第二个就是支付制度。同一个医生在省城看专科，收挂号费可能15块钱，或者算专家门诊挂号费100块钱吧。他离开了省城，到基层出诊，他的挂号费就没有这个价了，就降低了。这种支付制度使医生难以流动，无法吸引医生流动到基层。' },
      { name: ' 医生集团、多点执业的概念不在多点，而是在价值的回归和体现。价值回归表现：病人找到合适的医生，避免盲目看病的损失；医生找到合适的病人，获得应有的报酬；医保资金得到合理使用，而不至于鼓励过度医疗。+招牌。' },
      { name: ' 医学专家如果仅仅是为了赚几个钱的话，现在的医生工作室已经可以优哉游哉了，但是他们是想做一番事业的，如果一班想做事的人与开明的政府部门的结合，一定会开创一片新天地。' },
      { name: ' 医生作为一群很有自律性的专业团体，绝不会为了蝇头小利去破坏自己的声誉。而作为医院管理者更应该有一个开拓的思维去迎合医生流动时代的管理需求。+招牌。' },
      { name: ' 医生流动的成功、医疗集团的成功不在于是看多少病人，而是体现于病人如何去找合适的医生，医生又如何去找合适的病人，这才是我们的目标！' },
    ],
    imgList: [{ img: '' }],
  },

]

/** get请求
 * 获取用户列表
 */
Mock.mock("/api/mockGet0603List", "get", () => {
  return {
    code: "200",
    data: tableList,
  };

});


/** post请求添加表格数据 */
Mock.mock("/api/add", "post", (params) => {
  let newData = JSON.parse(params.body);
  newData.id = Random.guid();
  tableList.push(newData);
  return {
    code: "200",
    message: "success",
    data: tableList,
  };
});